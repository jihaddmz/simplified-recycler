// Generated by view binder compiler. Do not edit!
package com.jihaddmz.simplifiedrecyclerexample.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jihaddmz.simplifiedrecyclerexample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRecyclerviewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout actionButtons;

  @NonNull
  public final ImageView iv;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final LinearLayout llForeground;

  @NonNull
  public final TextView tv;

  private ItemRecyclerviewBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout actionButtons, @NonNull ImageView iv, @NonNull ImageView ivDelete,
      @NonNull ImageView ivEdit, @NonNull LinearLayout llForeground, @NonNull TextView tv) {
    this.rootView = rootView;
    this.actionButtons = actionButtons;
    this.iv = iv;
    this.ivDelete = ivDelete;
    this.ivEdit = ivEdit;
    this.llForeground = llForeground;
    this.tv = tv;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRecyclerviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRecyclerviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_recyclerview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRecyclerviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionButtons;
      LinearLayout actionButtons = ViewBindings.findChildViewById(rootView, id);
      if (actionButtons == null) {
        break missingId;
      }

      id = R.id.iv;
      ImageView iv = ViewBindings.findChildViewById(rootView, id);
      if (iv == null) {
        break missingId;
      }

      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.ivEdit;
      ImageView ivEdit = ViewBindings.findChildViewById(rootView, id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.llForeground;
      LinearLayout llForeground = ViewBindings.findChildViewById(rootView, id);
      if (llForeground == null) {
        break missingId;
      }

      id = R.id.tv;
      TextView tv = ViewBindings.findChildViewById(rootView, id);
      if (tv == null) {
        break missingId;
      }

      return new ItemRecyclerviewBinding((FrameLayout) rootView, actionButtons, iv, ivDelete,
          ivEdit, llForeground, tv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
